{"version":3,"sources":["../../src/updater/index.ts"],"sourcesContent":["import lantern from \"@lantern-app/core\";\r\n\r\nimport { throwErrorIfNoLantern } from \"../utils\";\r\n\r\nexport function launch() {\r\n  throwErrorIfNoLantern();\r\n\r\n  return lantern.ipc.invoke(\"lantern.updater.launch\");\r\n}\r\n\r\nexport function perform() {\r\n  throwErrorIfNoLantern();\r\n\r\n  return lantern.ipc.invoke(\"lantern.updater.perform\");\r\n}\r\n\r\nexport function check() {\r\n  throwErrorIfNoLantern();\r\n\r\n  return lantern.ipc.invoke<UpdateInfo>(\"lantern.updater.check\");\r\n}\r\n\r\nexport function onPrepared() {\r\n  throwErrorIfNoLantern();\r\n\r\n  return lantern.ipc.listen<PreparedEvent>(\"lantern.updater.onPrepared\");\r\n}\r\n\r\nexport function offPrepared() {\r\n  throwErrorIfNoLantern();\r\n\r\n  return lantern.ipc.unlisten(\"lantern.updater.onPrepared\");\r\n}\r\n\r\nexport function onChecked() {\r\n  throwErrorIfNoLantern();\r\n\r\n  return lantern.ipc.listen<CheckedEvent>(\"lantern.updater.onChecked\");\r\n}\r\n\r\nexport function offChecked() {\r\n  throwErrorIfNoLantern();\r\n\r\n  return lantern.ipc.listen(\"lantern.updater.onChecked\");\r\n}\r\n\r\nexport interface UpdateInfo {\r\n  version: string;\r\n  size: string;\r\n}\r\n\r\nexport interface PreparedEvent {\r\n  version: string;\r\n  size: string;\r\n}\r\n\r\nexport interface CheckedEvent {\r\n  version: string;\r\n  size: string;\r\n}\r\n"],"mappings":";;;;;AAAA,OAAO,aAAa;AAIb,SAAS,SAAS;AACvB,wBAAsB;AAEtB,SAAO,QAAQ,IAAI,OAAO,wBAAwB;AACpD;AAEO,SAAS,UAAU;AACxB,wBAAsB;AAEtB,SAAO,QAAQ,IAAI,OAAO,yBAAyB;AACrD;AAEO,SAAS,QAAQ;AACtB,wBAAsB;AAEtB,SAAO,QAAQ,IAAI,OAAmB,uBAAuB;AAC/D;AAEO,SAAS,aAAa;AAC3B,wBAAsB;AAEtB,SAAO,QAAQ,IAAI,OAAsB,4BAA4B;AACvE;AAEO,SAAS,cAAc;AAC5B,wBAAsB;AAEtB,SAAO,QAAQ,IAAI,SAAS,4BAA4B;AAC1D;AAEO,SAAS,YAAY;AAC1B,wBAAsB;AAEtB,SAAO,QAAQ,IAAI,OAAqB,2BAA2B;AACrE;AAEO,SAAS,aAAa;AAC3B,wBAAsB;AAEtB,SAAO,QAAQ,IAAI,OAAO,2BAA2B;AACvD;","names":[]}